#pragma once
#include <SFML\Graphics.hpp>
#define PI_VALUE (3.142f)
typedef sf::Vector2f vec2;

namespace HelperFunctions
{



//////////////////////////////////////////////////////////////////////////

float Length(vec2 v);

//////////////////////////////////////////////////////////////////////////

float LengthSq(vec2 v);

//////////////////////////////////////////////////////////////////////////

vec2 Normalize(vec2 v);

//////////////////////////////////////////////////////////////////////////

float Dot(vec2 v1, vec2 v2);

//////////////////////////////////////////////////////////////////////////

float RadiansToDegrees(float deg);

//////////////////////////////////////////////////////////////////////////

float DegreesToRadians(float deg);

//////////////////////////////////////////////////////////////////////////

float ToAngle(vec2 v);

//////////////////////////////////////////////////////////////////////////

vec2 Rotate(vec2 v, float angleRadians);

//////////////////////////////////////////////////////////////////////////

vec2 Reflect(vec2 v, vec2 n);

//////////////////////////////////////////////////////////////////////////

bool CircleToCircleIntersection(vec2 c1, vec2 c2, float r1, float r2);

//////////////////////////////////////////////////////////////////////////

// Test intersection between a line and circle
bool LineToCircleIntersection(vec2 p1, vec2 p2, vec2 circleCenter, float circleRadius, vec2 &closestPoint);

//////////////////////////////////////////////////////////////////////////

}